

 🗓️ Day 1: ArrayList + OOP Basics (Single Class, Real Logic)

 🛠 Task: Build a `ToDoList` Manager

Step-by-step tasks:
1. Create `ToDoList` class:
   - `ArrayList<String> tasks`
2. Methods:
   - `addTask(String task)`
   - `getAllTasks()`
   - `removeTask(String task)`
   - `clearAll()`

> 🧠 Focus: Just get used to using `ArrayList` as a field inside a class.



 🗓️ Day 2: ArrayList of Objects + Real Use Case

 🛠 Task: Build a `Student Management System`

Classes:
- `Student`: `id`, `name`, `marks`
- `StudentService`:
  - `ArrayList<Student> students`

Methods to write:
- `addStudent(Student s)`
- `getAllStudents()`
- `getStudentById(int id)`
- `deleteStudentByName(String name)`
- `getTopper()`: returns student with highest marks

> 🧠 Focus: Learn how to store custom objects in an ArrayList and iterate/search/update them.



 🗓️ Day 3: Combine Logic + Search + Filters

 🛠 Task: Build a `Product Catalog`

Classes:
- `Product`: `id`, `name`, `price`, `category`
- `ProductService`:
  - `ArrayList<Product> products`

Methods:
- `addProduct(Product p)`
- `getAllProducts()`
- `filterByPrice(double minPrice)`
- `getProductByCategory(String category)`
- `getMostExpensiveProduct()`

> 🧠 Focus: Practice filtering, comparing, using logic-heavy methods.




 🧪 Bonus Quick Challenge (Optional)
Once you’re done with Day 3, build this in 30–60 mins:

> 🔸 Library System
- `Book` class: `title`, `author`, `year`
- `LibraryService`:
  - Add book
  - List all
  - Search by author
  - Remove by title



